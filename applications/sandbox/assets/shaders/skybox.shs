#version 450
#state DEPTH OFF
#state CULL OFF

generate(vertex, fragment)

#include <stdio.shinc>
#include <color_correction.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position = vec4(position, 1.0);
        stdout(position) = (inverse(ViewMatrix) * vec4((inverse(ProjectionMatrix) * vec4(stdin(position), 1.0)).xyz, 0.0)).xyz;
    }
}

shader(fragment)
{
    uniform vec4 skycolor;

    void main(void)
    {
        vec3 unitDir = normalize(stdin(position));

        fragment_color = vec4(mix(vec3(average(skycolor.rgb)), skycolor.rgb, clamp01(dot(unitDir, vec3(0.0, 1.0, 0.0)) + 0.9)), 1.0);
        fragment_depth = 0.9999;
        fragment_normal = vec4(0.0);
        fragment_position = vec4(unitDir * FarZ, 1.0);
        fragment_overdraw = vec4(0.0);
    }
}
