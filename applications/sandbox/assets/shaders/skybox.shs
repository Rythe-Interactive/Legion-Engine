#version 450
#state DEPTH OFF
#state CULL OFF

generate(vertex, fragment)

#include <stdio.shinc>
#include <color_correction.shinc>

shader(vertex)
{
    void main(void)
    {
        vec3 worldPos = normalize(position) * FarZ + lgn_cmr_in.posnearz.xyz;
        gl_Position = WorldToScreenSpacePosition(vec4(worldPos, 1.0));
        stdout(position) = stdin(position);
    }
}

shader(fragment)
{
    uniform vec4 skycolor;

    void main(void)
    {
        vec3 unitDir = normalize(stdin(position));

        fragment_color = vec4(mix(vec3(average(skycolor.rgb)), skycolor.rgb, clamp01(dot(unitDir, vec3(0.f, 1.f, 0.f)) + 0.9)), 1.f);
        fragment_depth = 0.9999;
        fragment_normal = vec4(0.0);
        fragment_position = vec4(unitDir * FarZ * 0.9999, FarZ);
        fragment_overdraw = vec4(0.0);
    }
}
